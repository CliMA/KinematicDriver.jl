var documenterSearchIndex = {"docs":
[{"location":"References/#References","page":"References","title":"References","text":"","category":"section"},{"location":"References/","page":"References","title":"References","text":"","category":"page"},{"location":"simulation_setups/#Simulation-setups","page":"Simulation setups","title":"Simulation setups","text":"","category":"section"},{"location":"simulation_setups/#Box-model","page":"Simulation setups","title":"Box model","text":"","category":"section"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"The Box Model simulation represents a zero-dimensional system that focuses on key processes within thermodynamics and collisional microphysics, designed to capture the dynamics of atmospheric particles under controlled conditions without spatial variation. This model is ideal for studying isolated processes in a simplified environment. It includes microphysical processes such as auto-conversion, which represents the transformation of cloud droplets into raindrops through collision and coalescence, and accretion, which models the capture of smaller cloud droplets by larger raindrops as they fall, crucial for understanding precipitation dynamics.","category":"page"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"An example of running a box simulation is provided in the following file: test/experiments/box_driver/run_box_simulation.jl.","category":"page"},{"location":"simulation_setups/#Kinematic1D","page":"Simulation setups","title":"Kinematic1D","text":"","category":"section"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"The Kinematic1D setup is based on the kinematic framework introduced by [1]: Vertical momentum flux is constant with height and varying in time. Density and temerature profiles are constant and defined by the initial   condition, which is unsaturated. As the simulation progresses in time moisture is transported upwards,   supersaturation grows in the upper part of the domain   and precipitation is formed. In the second part of the simulation the vertical momentum flux is switched off,   leaving only cloud microphysics tendencies acting to change   the model state. Below figure shows an example prescribed vertical momentum as a function of time.","category":"page"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"using Plots\nimport Kinematic1D.K1DModel as K1D\n\nt_range = range(0, 15 * 60, length=100)\nw1 = 2.0\nt1 = 600.0\nplot(t_range / 60.0, [K1D.œÅw_helper(t, w1, t1) for t in t_range], linewidth=3, xlabel=\"t [min]\", ylabel=\"updraft momentum flux [m/s kg/m3]\")\nsavefig(\"prescribed_momentum_flux.svg\") #hide","category":"page"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"(Image: )","category":"page"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"An example of running a one-dimensional KiD simulation is provided in the following file: test/experiments/KiD_driver/KiD_driver.jl.","category":"page"},{"location":"simulation_setups/#Cloud-layer-simulations","page":"Simulation setups","title":"Cloud layer simulations","text":"","category":"section"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"Cloud Layer Simulations employ a one-dimensional setup to explore atmospheric processes, facilitating a detailed examination of the evolution and interactions within a cloud layer. Initially, the simulation initializes the atmospheric column with a uniform gamma distribution, classifying particles into liquid and rain categories. As the simulation progresses, it incorporates thermodynamics, collisional microphysics, and sedimentation. These elements work together to model the complex behaviors of cloud formation and precipitation. By accounting for the vertical distribution and movement of particles, this simulation offers insights into how processes such as auto-conversion, accretion, and sedimentation influence cloud dynamics and precipitation patterns.","category":"page"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"An example of running a cloud layer simulation is provided in the following file: test/experiments/KiD_col_sed_driver/run_KiD_col_sed_simulation.jl.","category":"page"},{"location":"simulation_setups/#Two-dimensional-system","page":"Simulation setups","title":"Two-dimensional system","text":"","category":"section"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"The two-dimensional setup models the dynamics of an updraft and a downdraft in moist air, incorporating a range of atmospheric processes including thermodynamics, condensation, aerosol activation, collisional processes, and sedimentation of raindrops. These elements collectively simulate complex cloud and precipitation systems. The velocity profile, which varies across spatial dimensions x, z and over time t, is determined using the stream function psi, defined as follows:","category":"page"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"beginalign\npsi(x z) = - (rho w)_0 fracWpi sinleft(fracpi zHright)cosleft(frac2pi xWright)\nendalign","category":"page"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"In this equation, W denotes the width of the domain, H represents the height of the domain, and (rho w)_0 is the updraft amplitude, varying over time according to the following equation:","category":"page"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"beginalign\n(rho w)_0 = begincases \n(rho w)_max sinleft(fracpi tt_1right)  textfor  t  t_1 \n0  textfor  t  t_1 \nendcases\nendalign","category":"page"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"where (rho w)_max represents the maximum updraft amplitude. An example of running a two-dimensional simulation is provided in the following file: test/experiments/Ki2D_driver/run_kinematic2d_simulation.jl.","category":"page"},{"location":"simulation_setups/#Changes-to-CliMA-defaults","page":"Simulation setups","title":"Changes to CliMA defaults","text":"","category":"section"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"One of the goals of Kinematic1D.jl   is to test against PySDM   and the particle-based implementation of the kinematic model available in   PySDM-examples. As a result, some CliMA constants were changed from their default values to better match PySDM:","category":"page"},{"location":"simulation_setups/","page":"Simulation setups","title":"Simulation setups","text":"symbol definition units default value new value\nMSLP Mean sea level pressure Pa 101325 10^5\ngrav Gravitational acceleration ms^2 981 980665\ngas_constant Universal gas constant JmolK 83144598 8314462618\nkappa_d Adiabatic exponent for dry air (2/7) - 028571428571 02855747338575384\ncp_v Isobaric specific heat of water vapor JkgK 1859 1850\nmolmass_dryair Molecular mass of dry air kgmol 002897 002896998\nmolmass_water Molecular mass of water kgmol 001801528 0018015\nqliqthreshold Cloud liquid water autoconversion threshold kgkg 00005 00001","category":"page"},{"location":"calibration_features/#Calibration-features","page":"Calibration features","title":"Calibration features","text":"","category":"section"},{"location":"calibration_features/","page":"Calibration features","title":"Calibration features","text":"Our package provides tools for calibrating microphysical parameters, using one-dimensional simulations and comparing results with reference particle-based simulations. This process aids in fine-tuning the simulation models to better match detailed simulations of particle-based methods, enhancing the accuracy and reliability of simulation outcomes.","category":"page"},{"location":"calibration_features/#Calibration-Methods","page":"Calibration features","title":"Calibration Methods","text":"","category":"section"},{"location":"calibration_features/","page":"Calibration features","title":"Calibration features","text":"We support several calibration methods, including:","category":"page"},{"location":"calibration_features/","page":"Calibration features","title":"Calibration features","text":"Ensemble Kalman Inversion (EKI): This method uses an ensemble of model states to update estimates of the state and parameters. It is particularly robust against model errors. [2]\nUnscented Kalman Inversion (UKI): UKI is valuable for exploring parameter uncertainties and correlations. [3]\nOptimization Tools: We also integrate optimization tools from Optim.jl for those who prefer straightforward optimization approaches.","category":"page"},{"location":"calibration_features/#Configuration-File","page":"Calibration features","title":"Configuration File","text":"","category":"section"},{"location":"calibration_features/","page":"Calibration features","title":"Calibration features","text":"To use the calibration tools, users must provide a configuration file detailing various elements of the calibration process:","category":"page"},{"location":"calibration_features/","page":"Calibration features","title":"Calibration features","text":"Prior Settings: Defines the prior distributions of parameters.\nObservations: Specifies the reference data against which simulations are compared.\nCalibration Process: Outlines the methods and approaches used for calibration.\nModel Parameters: Details parameters that affect the model's behavior.\nStatistics: Specifies the statistical methods to be applied on the data and simulation results.","category":"page"},{"location":"calibration_features/#Example-and-Documentation","page":"Calibration features","title":"Example and Documentation","text":"","category":"section"},{"location":"calibration_features/","page":"Calibration features","title":"Calibration features","text":"An example of the configuration file for a simple microphysics calibration can be found at test/experiments/calibrations/config.jl, and the program to run the calibration at  test/experiments/calibrations/run_calibration.jl.","category":"page"},{"location":"#KinematicDriver.jl","page":"Home","title":"KinematicDriver.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"KinematicDriver.jl provides tools for prescribed flow simulations for testing and calibrating microphysics schemes. It uses   ClimaCore.jl operators and   CloudMicrophysics.jl tendencies   to create the numerical problem that is then solved using   OrdinaryDiffEq.jl.","category":"page"},{"location":"#Documentation-outline","page":"Home","title":"Documentation outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Simulation Setups: Introduces the physical systems that can be simulated using this package.\nCalibration Features: Describes the tools available for calibrating microphysical parameters, based on comparing simulations provided in this package with reference detailed simulations.\nReferences: Provides a list of publications that support the tools implemented in this package.","category":"page"},{"location":"#Contributing-and-license","page":"Home","title":"Contributing and license","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"KinematicDriver.jl is developed by the Climate Modeling Alliance and is released under the Apache License Version 2.0. Please open an issue or reach out to us if you have any questions or comments.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: Clima logo)","category":"page"}]
}
